generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Country {
    id   Int    @id @default(autoincrement())
    name String @unique

    users  User[]
    cities City[]
}

model City {
    id   Int    @id @default(autoincrement())
    name String

    country   Country @relation(fields: [countryId], references: [id])
    countryId Int

    users User[]
}

model User {
    id       Int    @id @default(autoincrement())
    email    String @unique
    fullName String
    password String

    city   City @relation(fields: [cityId], references: [id])
    cityId Int

    country   Country @relation(fields: [countryId], references: [id])
    countryId Int

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    cart Cart[]

    order Order[]

    verificationCode VerificationCode[]

    role UserRole @default(USER)
}

enum UserRole {
    ADMIN
    USER
}

//Products
model Category {
    id           Int    @id @default(autoincrement())
    link         String
    categoryName String
    imageUrl     String

    product Product[]
}

model Product {
    id                    Int    @id @default(autoincrement())
    name                  String
    art                   String
    mainDescription       String
    additionalDescription String
    price                 Float
    imageUrl              String

    categoryId Int
    category   Category @relation(fields: [categoryId], references: [id])

    size      Size[]
    color     Color[]
    advantage Advantage[]
    faqItem   FaqItem[]
    cartItem  CartItem[]
}

model Advantage {
    id    Int    @id @default(autoincrement())
    title String

    product Product[]
}

model Size {
    id    Int    @id @default(autoincrement())
    value String

    product Product[]
}

model Color {
    id    Int    @id @default(autoincrement())
    value String

    product Product[]
}

model FaqItem {
    id       Int    @id @default(autoincrement())
    question String
    answer   String

    product Product[]
}

//Cart
model Cart {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int

    cartItem CartItem[]

    totalAmount Int @default(0)
}

model CartItem {
    id Int @id @default(autoincrement())

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    product   Product @relation(fields: [productId], references: [id])
    productId Int

    quantity Int
}

//Order
model Order {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int

    totalAmount Int
    status      OrderStatus
    paymentId   String?

    items Json

    fullName String
    adress   String
    phone    String
    comment  String
}

enum OrderStatus {
    PENDING
    SUCCEEDED
    DELIVERED
    CANCELED
}

model VerificationCode{
    id Int @id @default(autoincrement())

    code String

    user   User @relation(fields: [userId], references: [id])
    userId Int @unique
}
